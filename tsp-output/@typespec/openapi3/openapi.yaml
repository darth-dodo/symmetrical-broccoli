openapi: 3.0.0
info:
  title: Pet Store Service
  description: This is a pet store service.
  version: 0.0.0
tags: []
paths:
  /pets:
    get:
      operationId: Pets_list
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
  /tenants/{tenantId}/users/{userName}:
    get:
      operationId: UserOperations_getUser
      parameters:
        - $ref: '#/components/parameters/CommonParameters.tenantId'
        - $ref: '#/components/parameters/CommonParameters.userName'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UserOperations_updateUser
      parameters:
        - $ref: '#/components/parameters/CommonParameters.tenantId'
        - $ref: '#/components/parameters/CommonParameters.userName'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/User'
              required:
                - user
components:
  parameters:
    CommonParameters.tenantId:
      name: tenantId
      in: path
      required: true
      schema:
        type: string
    CommonParameters.userName:
      name: userName
      in: path
      required: true
      schema:
        type: string
  schemas:
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Pet:
      type: object
      required:
        - name
        - age
        - kind
      properties:
        name:
          type: string
          minLength: 100
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        kind:
          type: string
          enum:
            - dog
            - cat
            - fish
    User:
      type: object
      required:
        - name
      properties:
        name:
          type: string
servers:
  - url: https://example.com
    description: The service endpoint
    variables: {}
